name: Pull Request

on:
  workflow_call:
    inputs:
      target:
        description: The branch on which actual developments are in progress.
        required: true
        type: string
      template:
        description: A template used as a body of the Pull Request.
        required: false
        type: string
    secrets:
      github-token:
        description: The Github token with "repository viewer" access.
        required: true

permissions:
  contents: read
  pull-requests: write
  issues: write
            
jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    name: Create a draft pull request
    steps:
        - id: checkout-code
          name: Initialize code
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.github-token }}
        - id: check-pull-request
          name: Check if a pull request already exist on Github
          uses: actions/github-script@v7
          with:
            retries: 3
            script: |
              const pullRequests = await github.paginate(
                  github.rest.pulls.list({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    head: context.ref,
                    base: "${{ github.event.repository.default_branch }}"
                  })
                )

              console.log(pullRequests, pullRequests.length)

              return {
                notExists: pullRequests.length === 0
              }
        - id: create-pull-request
          name: Create a draft pull request on Github
          if: ${{ fromJSON(steps.check-pull-request.outputs.result).notExists }}
          uses: actions/github-script@v7
          with:
            retries: 3
            script: |
              const regexp = /^(?<type>\w+)\/?(?<ticketId>[\w\-_]+)?\/(?<description>[\w\-]+)$/gi
              const result = "${{ inputs.target }}".matchAll(regexp)

              let type
              let ticketId
              let description

              for (const match of result) {
                type = match.groups?.type
                ticketId = match.groups?.ticketId
                description = match.groups?.description?.replaceAll("-", " ")
              }

              if(type === undefined || description === undefined) {
                code.setFailed(`Failed to due : "type" and/or "description" are missing in your branch. This one must follow this pattern "{type}/{ticketId}?/{description}" and is actually ${{ inputs.target }}.`)
              }

              let title = `${type}{ticket-id}: ${description}`
              let body = ""

              if("${{ inputs.template }}" != "") {
                body = require("${{ inputs.template }}").replaceAll("{creator}", context.payload.sender.login)
              }

              if(ticketId !== undefined) {
                title = title.replace("{ticket-id}", `(${ticketId})`)
                body = body.replaceAll("{ticket-id}", ticketId)
              }

              const pullRequest = (await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  head: context.ref,
                  base: "${{ github.event.repository.default_branch }}",
                  draft: true,
                  title,
                  body
                })).data 

              return {
                number: pullRequest.number,
                type,
                ticketId,
                description
              }
        - id: add-labels
          name: Add one or many labels to the pull request
          if: ${{ fromJSON(steps.check-pull-request.outputs.result).notExists }}
          uses: actions/github-script@v7
          with:
            retries: 3
            script: |
              const labels = {
                feat: ["enhancement"],
                fix: ["bug"],
                docs: ["documentation"],
                chore: ["configuration"],
                test: ["enhancement", "enhancement:minor"],
                refactor: ["enhancement", "enhancement:minor"],
                ci: ["ci/cd"]
              }

              github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: ${{ steps.create-pull-request.outputs.result.number }},
                  labels: labels["${{ steps.create-pull-request.outputs.result.type }}"]
                })
        - id: add-assignees
          name: Add one or many assignees to the pull request
          if: ${{ fromJSON(steps.check-pull-request.outputs.result).notExists }}
          uses: actions/github-script@v7
          with:
            retries: 3
            script: |
              github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: ${{ steps.create-pull-request.outputs.result.number }},
                  assignees: [context.payload.sender.login]
                })

name: Quality

on:
  workflow_call:
    inputs:
      working-directory:
        description: The working directory, default to ".".
        required: false
        default: "."
        type: string
      node-version:
        description: The nodeJS version, default to "latest".
        required: false
        default: "latest"
        type: string
      max-warnings:
        description: The number of warning issues accepted before being considered as a failure.
        required: false
        default: -1
        type: number
    secrets:
      github-token:
        description: The Github token with "repository viewer" access.
        required: true
            
jobs:
  scan-code:
    runs-on: ubuntu-latest
    name: Scan code for quality issues
    steps:
        - id: checkout-code
          name: Initialize code
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.github-token }}
        - id: setup-node
          name: Initialize NodeJS
          uses: actions/setup-node@v4
          with:
            node-version: ${{ inputs.node-version }}
            cache: npm
            cache-dependency-path: "${{ inputs.working-directory }}/package-lock.json"
        - id: setup-dependencies
          name: Initialize dependencies
          run: |
            cd ${{ inputs.working-directory }}
            npm install
        - id: scan-code
          name: Scan code for quality issues
          run: |
            cd ${{ inputs.working-directory }}
            npm run lint -- \
                --debug \
                --color \
                --max-warnings="${{ inputs.max-warnings }}" \
                --output-file="${{runner.temp}}/report_scan-code.json" \
                --format=json
            ((ls ${{runner.temp}}/report_scan-code.json >> /dev/null 2>&1 && echo "hasReport=1") || echo "hasReport=0") >> "$GITHUB_OUTPUT"
        - id: upload-report
          name: Upload report on Github Action run
          if: ${{ steps.scan-code.outputs.hasReport == '1' }}
          uses: actions/upload-artifact@v4
          with:
            name: report-quality
            path: ${{runner.temp}}/report_scan-code.json
        - id: summarize-report
          name: Summarize report on Github Action run
          if: ${{ steps.scan-code.outputs.hasReport == '1' }}
          uses: actions/github-script@v7
          with:
            script: |
              const severities = {
                2: 'high',
                1: 'medium'
              }

              const count = {
                  2: 0,
                  1: 0
                }

              const output = {
                2: 'error',
                1: 'warning'
              }

              const report = require("${{runner.temp}}/report_scan-code.json")

              for(const file of report) {
                for(const issue of file.messages) {
                  count[issue.severity] += 1
                  core[output[issue.severity]](
                    issue.message,
                    { 
                      file: file.filePath,
                      startLine: issue.line,
                      endLine: issue.endLine,
                      startColumn: issue.column,
                      endColumn: issue.endColumn
                    })
                }
              }

              core.notice(`${report.length} files analyzed.`)

              Object.keys(count).forEach(
                severity => {
                  if(count[severity] > 0) {
                    core[output[severity]](`${count[severity]} issues marked as ${severities[severity]}.`)
                  }
                })